{"ast":null,"code":"/*!\r\n * @copyright &copy; Kartik Visweswaran, Krajee.com, 2014\r\n * @version 3.3.0\r\n *\r\n * A simple yet powerful JQuery star rating plugin that allows rendering\r\n * fractional star ratings and supports Right to Left (RTL) input.\r\n * \r\n * For more JQuery plugins visit http://plugins.krajee.com\r\n * For more Yii related demos visit http://demos.krajee.com\r\n */\n(function ($) {\n  var DEFAULT_MIN = 0;\n  var DEFAULT_MAX = 5;\n  var DEFAULT_STEP = 0.5;\n  var isTouchCapable = 'ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch;\n\n  var isEmpty = function isEmpty(value, trim) {\n    return typeof value === 'undefined' || value === null || value === undefined || value == [] || value === '' || trim && $.trim(value) === '';\n  };\n\n  var validateAttr = function validateAttr($input, vattr, options) {\n    var chk = isEmpty($input.data(vattr)) ? $input.attr(vattr) : $input.data(vattr);\n\n    if (chk) {\n      return chk;\n    }\n\n    return options[vattr];\n  };\n\n  var getDecimalPlaces = function getDecimalPlaces(num) {\n    var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n    if (!match) {\n      return 0;\n    }\n\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n  };\n\n  var applyPrecision = function applyPrecision(val, precision) {\n    return parseFloat(val.toFixed(precision));\n  }; // Rating public class definition\n\n\n  var Rating = function Rating(element, options) {\n    this.$element = $(element);\n    this.init(options);\n  };\n\n  Rating.prototype = {\n    constructor: Rating,\n    _parseAttr: function _parseAttr(vattr, options) {\n      var self = this,\n          $input = self.$element;\n\n      if ($input.attr('type') === 'range' || $input.attr('type') === 'number') {\n        var val = validateAttr($input, vattr, options);\n        var chk = DEFAULT_STEP;\n\n        if (vattr === 'min') {\n          chk = DEFAULT_MIN;\n        } else if (vattr === 'max') {\n          chk = DEFAULT_MAX;\n        } else if (vattr === 'step') {\n          chk = DEFAULT_STEP;\n        }\n\n        var _final = isEmpty(val) ? chk : val;\n\n        return parseFloat(_final);\n      }\n\n      return parseFloat(options[vattr]);\n    },\n\n    /**\r\n     * Listens to events\r\n     */\n    listen: function listen() {\n      var self = this;\n      self.initTouch();\n      self.$rating.on(\"click\", function (e) {\n        if (self.inactive) {\n          return;\n        }\n\n        var w = e.pageX - self.$rating.offset().left;\n        self.setStars(w);\n        self.$element.trigger('change');\n        self.$element.trigger('rating.change', [self.$element.val(), self.$caption.html()]);\n        self.starClicked = true;\n      });\n      self.$rating.on(\"mousemove\", function (e) {\n        if (!self.hoverEnabled || self.inactive) {\n          return;\n        }\n\n        self.starClicked = false;\n        var pos = e.pageX - self.$rating.offset().left,\n            out = self.calculate(pos);\n        self.toggleHover(out);\n        self.$element.trigger('rating.hover', [out.val, out.caption, 'stars']);\n      });\n      self.$rating.on(\"mouseleave\", function (e) {\n        if (!self.hoverEnabled || self.inactive || self.starClicked) {\n          return;\n        }\n\n        var out = self.cache;\n        self.toggleHover(out);\n        self.$element.trigger('rating.hoverleave', ['stars']);\n      });\n      self.$clear.on(\"mousemove\", function (e) {\n        if (!self.hoverEnabled || self.inactive || !self.hoverOnClear) {\n          return;\n        }\n\n        self.clearClicked = false;\n        var caption = '<span class=\"' + self.clearCaptionClass + '\">' + self.clearCaption + '</span>',\n            val = self.clearValue,\n            width = self.getWidthFromValue(val),\n            out;\n        out = {\n          caption: caption,\n          width: width,\n          val: val\n        };\n        self.toggleHover(out);\n        self.$element.trigger('rating.hover', [val, caption, 'clear']);\n      });\n      self.$clear.on(\"mouseleave\", function (e) {\n        if (!self.hoverEnabled || self.inactive || self.clearClicked || !self.hoverOnClear) {\n          return;\n        }\n\n        var out = self.cache;\n        self.toggleHover(out);\n        self.$element.trigger('rating.hoverleave', ['clear']);\n      });\n      self.$clear.on(\"click\", function (e) {\n        if (!self.inactive) {\n          self.clear();\n          self.clearClicked = true;\n        }\n      });\n      $(self.$element[0].form).on(\"reset\", function (e) {\n        if (!self.inactive) {\n          self.reset();\n        }\n      });\n    },\n    destroy: function destroy() {\n      var self = this,\n          $el = self.$element;\n\n      if (!isEmpty(self.$container)) {\n        self.$container.before($el).remove();\n      }\n\n      $.removeData($el.get(0));\n      $el.off('rating').removeClass('hide');\n    },\n    create: function create() {\n      var options = arguments.length > 0 ? arguments[0] : {},\n          $el = self.$element;\n      self.destroy();\n      $el.rating(options);\n    },\n    setTouch: function setTouch(e, update) {\n      var self = this;\n\n      if (!isTouchCapable || self.inactive) {\n        return;\n      }\n\n      var ev = e.originalEvent,\n          touches = ev.touches.length > 0 ? ev.touches : ev.changedTouches,\n          pos = touches[0].pageX - self.$rating.offset().left;\n\n      if (update === true) {\n        self.setStars(pos);\n        self.$element.trigger('change');\n        self.$element.trigger('rating.change', [self.$element.val(), self.$caption.html()]);\n        self.starClicked = true;\n      } else {\n        var out = self.calculate(pos),\n            caption = out.val <= self.clearValue ? self.fetchCaption(self.clearValue) : out.caption,\n            w = self.getWidthFromValue(self.clearValue),\n            width = out.val <= self.clearValue ? self.rtl ? 100 - w + '%' : w + '%' : out.width;\n        self.$caption.html(caption);\n        self.$stars.css('width', width);\n      }\n    },\n    initTouch: function initTouch() {\n      var self = this;\n      self.$rating.on(\"touchstart\", function (e) {\n        self.setTouch(e, false);\n      });\n      self.$rating.on(\"touchmove\", function (e) {\n        self.setTouch(e, false);\n      });\n      self.$rating.on(\"touchend\", function (e) {\n        self.setTouch(e, true);\n      });\n    },\n    initSlider: function initSlider(options) {\n      var self = this;\n\n      if (isEmpty(self.$element.val())) {\n        self.$element.val(0);\n      }\n\n      self.initialValue = self.$element.val();\n      self.min = typeof options.min !== 'undefined' ? options.min : self._parseAttr('min', options);\n      self.max = typeof options.max !== 'undefined' ? options.max : self._parseAttr('max', options);\n      self.step = typeof options.step !== 'undefined' ? options.step : self._parseAttr('step', options);\n\n      if (isNaN(self.min) || isEmpty(self.min)) {\n        self.min = DEFAULT_MIN;\n      }\n\n      if (isNaN(self.max) || isEmpty(self.max)) {\n        self.max = DEFAULT_MAX;\n      }\n\n      if (isNaN(self.step) || isEmpty(self.step) || self.step == 0) {\n        self.step = DEFAULT_STEP;\n      }\n\n      self.diff = self.max - self.min;\n    },\n\n    /**\r\n     * Initializes the plugin\r\n     */\n    init: function init(options) {\n      var self = this;\n      self.options = options;\n      self.hoverEnabled = options.hoverEnabled;\n      self.hoverChangeCaption = options.hoverChangeCaption;\n      self.hoverChangeStars = options.hoverChangeStars;\n      self.hoverOnClear = options.hoverOnClear;\n      self.starClicked = false;\n      self.clearClicked = false;\n      self.initSlider(options);\n      self.checkDisabled();\n      $element = self.$element;\n      self.containerClass = options.containerClass;\n      self.glyphicon = options.glyphicon;\n      var defaultStar = self.glyphicon ? \"\\uE006\" : \"\\u2605\";\n      self.symbol = isEmpty(options.symbol) ? defaultStar : options.symbol;\n      self.rtl = options.rtl || self.$element.attr('dir');\n\n      if (self.rtl) {\n        self.$element.attr('dir', 'rtl');\n      }\n\n      self.showClear = options.showClear;\n      self.showCaption = options.showCaption;\n      self.size = options.size;\n      self.stars = options.stars;\n      self.defaultCaption = options.defaultCaption;\n      self.starCaptions = options.starCaptions;\n      self.starCaptionClasses = options.starCaptionClasses;\n      self.clearButton = options.clearButton;\n      self.clearButtonTitle = options.clearButtonTitle;\n      self.clearButtonBaseClass = !isEmpty(options.clearButtonBaseClass) ? options.clearButtonBaseClass : 'clear-rating';\n      self.clearButtonActiveClass = !isEmpty(options.clearButtonActiveClass) ? options.clearButtonActiveClass : 'clear-rating-active';\n      self.clearCaption = options.clearCaption;\n      self.clearCaptionClass = options.clearCaptionClass;\n      self.clearValue = isEmpty(options.clearValue) ? self.min : options.clearValue;\n      self.$element.removeClass('form-control').addClass('form-control');\n      self.$clearElement = isEmpty(options.clearElement) ? null : $(options.clearElement);\n      self.$captionElement = isEmpty(options.captionElement) ? null : $(options.captionElement);\n\n      if (typeof self.$rating == 'undefined' && typeof self.$container == 'undefined') {\n        self.$rating = $(document.createElement(\"div\")).html('<div class=\"rating-stars\"></div>');\n        self.$container = $(document.createElement(\"div\"));\n        self.$container.before(self.$rating);\n        self.$container.append(self.$rating);\n        self.$element.before(self.$container).appendTo(self.$rating);\n      }\n\n      self.$stars = self.$rating.find('.rating-stars');\n      self.generateRating();\n      self.$clear = !isEmpty(self.$clearElement) ? self.$clearElement : self.$container.find('.' + self.clearButtonBaseClass);\n      self.$caption = !isEmpty(self.$captionElement) ? self.$captionElement : self.$container.find(\".caption\");\n      self.setStars();\n      self.$element.removeClass('hide').addClass('hide');\n      self.listen();\n\n      if (self.showClear) {\n        self.$clear.attr({\n          \"class\": self.getClearClass()\n        });\n      }\n\n      self.cache = {\n        caption: self.$caption.html(),\n        width: self.$stars.width(),\n        val: self.$element.val()\n      };\n      self.$element.removeClass('rating-loading');\n    },\n    checkDisabled: function checkDisabled() {\n      var self = this;\n      self.disabled = validateAttr(self.$element, 'disabled', self.options);\n      self.readonly = validateAttr(self.$element, 'readonly', self.options);\n      self.inactive = self.disabled || self.readonly;\n    },\n    getClearClass: function getClearClass() {\n      return this.clearButtonBaseClass + ' ' + (this.inactive ? '' : this.clearButtonActiveClass);\n    },\n    generateRating: function generateRating() {\n      var self = this,\n          clear = self.renderClear(),\n          caption = self.renderCaption(),\n          css = self.rtl ? 'rating-container-rtl' : 'rating-container',\n          stars = self.getStars();\n      css += self.glyphicon ? self.symbol == \"\\uE006\" ? ' rating-gly-star' : ' rating-gly' : ' rating-uni';\n      self.$rating.attr('class', css);\n      self.$rating.attr('data-content', stars);\n      self.$stars.attr('data-content', stars);\n      var css = self.rtl ? 'star-rating-rtl' : 'star-rating';\n      self.$container.attr('class', css + ' rating-' + self.size);\n\n      if (self.inactive) {\n        self.$container.removeClass('rating-active').addClass('rating-disabled');\n      } else {\n        self.$container.removeClass('rating-disabled').addClass('rating-active');\n      }\n\n      if (typeof self.$caption == 'undefined' && typeof self.$clear == 'undefined') {\n        if (self.rtl) {\n          self.$container.prepend(caption).append(clear);\n        } else {\n          self.$container.prepend(clear).append(caption);\n        }\n      }\n\n      if (!isEmpty(self.containerClass)) {\n        self.$container.removeClass(self.containerClass).addClass(self.containerClass);\n      }\n    },\n    getStars: function getStars() {\n      var self = this,\n          numStars = self.stars,\n          stars = '';\n\n      for (var i = 1; i <= numStars; i++) {\n        stars += self.symbol;\n      }\n\n      return stars;\n    },\n    renderClear: function renderClear() {\n      var self = this;\n\n      if (!self.showClear) {\n        return '';\n      }\n\n      var css = self.getClearClass();\n\n      if (!isEmpty(self.$clearElement)) {\n        self.$clearElement.removeClass(css).addClass(css).attr({\n          \"title\": self.clearButtonTitle\n        });\n        self.$clearElement.html(self.clearButton);\n        return '';\n      }\n\n      return '<div class=\"' + css + '\" title=\"' + self.clearButtonTitle + '\">' + self.clearButton + '</div>';\n    },\n    renderCaption: function renderCaption() {\n      var self = this,\n          val = self.$element.val();\n\n      if (!self.showCaption) {\n        return '';\n      }\n\n      var html = self.fetchCaption(val);\n\n      if (!isEmpty(self.$captionElement)) {\n        self.$captionElement.removeClass('caption').addClass('caption').attr({\n          \"title\": self.clearCaption\n        });\n        self.$captionElement.html(html);\n        return '';\n      }\n\n      return '<div class=\"caption\">' + html + '</div>';\n    },\n    fetchCaption: function fetchCaption(rating) {\n      var self = this;\n      var val = parseFloat(rating),\n          css,\n          cap;\n\n      if (typeof self.starCaptionClasses == \"function\") {\n        css = isEmpty(self.starCaptionClasses(val)) ? self.clearCaptionClass : self.starCaptionClasses(val);\n      } else {\n        css = isEmpty(self.starCaptionClasses[val]) ? self.clearCaptionClass : self.starCaptionClasses[val];\n      }\n\n      if (typeof self.starCaptions == \"function\") {\n        var cap = isEmpty(self.starCaptions(val)) ? self.defaultCaption.replace(/\\{rating\\}/g, val) : self.starCaptions(val);\n      } else {\n        var cap = isEmpty(self.starCaptions[val]) ? self.defaultCaption.replace(/\\{rating\\}/g, val) : self.starCaptions[val];\n      }\n\n      var caption = val == self.clearValue ? self.clearCaption : cap;\n      return '<span class=\"' + css + '\">' + caption + '</span>';\n    },\n    getWidthFromValue: function getWidthFromValue(val) {\n      var self = this,\n          min = self.min,\n          max = self.max,\n          step = self.step;\n\n      if (val <= min || min == max) {\n        return 0;\n      }\n\n      if (val >= max) {\n        return 100;\n      }\n\n      return (val - min) * 100 / (max - min);\n    },\n    getValueFromPosition: function getValueFromPosition(pos) {\n      var self = this,\n          precision = getDecimalPlaces(self.step),\n          val,\n          factor,\n          maxWidth = self.$rating.width();\n      factor = self.diff * pos / (maxWidth * self.step);\n      factor = self.rtl ? Math.floor(factor) : Math.ceil(factor);\n      val = applyPrecision(parseFloat(self.min + factor * self.step), precision);\n      val = Math.max(Math.min(val, self.max), self.min);\n      return self.rtl ? self.max - val : val;\n    },\n    toggleHover: function toggleHover(out) {\n      var self = this;\n\n      if (self.hoverChangeCaption) {\n        var caption = out.val <= self.clearValue ? self.fetchCaption(self.clearValue) : out.caption;\n        self.$caption.html(caption);\n      }\n\n      if (self.hoverChangeStars) {\n        var w = self.getWidthFromValue(self.clearValue),\n            width = out.val <= self.clearValue ? self.rtl ? 100 - w + '%' : w + '%' : out.width;\n        self.$stars.css('width', width);\n      }\n    },\n    calculate: function calculate(pos) {\n      var self = this,\n          defaultVal = isEmpty(self.$element.val()) ? 0 : self.$element.val(),\n          val = arguments.length ? self.getValueFromPosition(pos) : defaultVal,\n          caption = self.fetchCaption(val),\n          width = self.getWidthFromValue(val);\n\n      if (self.rtl) {\n        width = 100 - width;\n      }\n\n      width += '%';\n      return {\n        caption: caption,\n        width: width,\n        val: val\n      };\n    },\n    setStars: function setStars(pos) {\n      var self = this,\n          out = arguments.length ? self.calculate(pos) : self.calculate();\n      self.$element.val(out.val);\n      self.$stars.css('width', out.width);\n      self.$caption.html(out.caption);\n      self.cache = out;\n    },\n    clear: function clear() {\n      var self = this;\n      var title = '<span class=\"' + self.clearCaptionClass + '\">' + self.clearCaption + '</span>';\n      self.$stars.removeClass('rated');\n\n      if (!self.inactive) {\n        self.$caption.html(title);\n      }\n\n      self.$element.val(self.clearValue);\n      self.setStars();\n      self.$element.trigger('rating.clear');\n    },\n    reset: function reset() {\n      var self = this;\n      self.$element.val(self.initialValue);\n      self.setStars();\n      self.$element.trigger('rating.reset');\n    },\n    update: function update(val) {\n      var self = this;\n\n      if (!arguments.length) {\n        return;\n      }\n\n      self.$element.val(val);\n      self.setStars();\n    },\n    refresh: function refresh(options) {\n      var self = this;\n\n      if (!arguments.length) {\n        return;\n      }\n\n      self.$rating.off('rating');\n      self.$clear.off();\n      self.init($.extend(self.options, options));\n      self.showClear ? self.$clear.show() : self.$clear.hide();\n      self.showCaption ? self.$caption.show() : self.$caption.hide();\n      self.$element.trigger('rating.refresh');\n    }\n  }; //Star rating plugin definition\n\n  $.fn.rating = function (option) {\n    var args = Array.apply(null, arguments);\n    args.shift();\n    return this.each(function () {\n      var $this = $(this),\n          data = $this.data('rating'),\n          options = typeof option === 'object' && option;\n\n      if (!data) {\n        $this.data('rating', data = new Rating(this, $.extend({}, $.fn.rating.defaults, options, $(this).data())));\n      }\n\n      if (typeof option === 'string') {\n        data[option].apply(data, args);\n      }\n    });\n  };\n\n  $.fn.rating.defaults = {\n    stars: 5,\n    glyphicon: true,\n    symbol: null,\n    disabled: false,\n    readonly: false,\n    rtl: false,\n    size: 'md',\n    showClear: true,\n    showCaption: true,\n    defaultCaption: '{rating} Stars',\n    starCaptions: {\n      0.5: 'Half Star',\n      1: 'One Star',\n      1.5: 'One & Half Star',\n      2: 'Two Stars',\n      2.5: 'Two & Half Stars',\n      3: 'Three Stars',\n      3.5: 'Three & Half Stars',\n      4: 'Four Stars',\n      4.5: 'Four & Half Stars',\n      5: 'Five Stars'\n    },\n    starCaptionClasses: {\n      0.5: 'label label-danger',\n      1: 'label label-danger',\n      1.5: 'label label-warning',\n      2: 'label label-warning',\n      2.5: 'label label-info',\n      3: 'label label-info',\n      3.5: 'label label-primary',\n      4: 'label label-primary',\n      4.5: 'label label-success',\n      5: 'label label-success'\n    },\n    clearButton: '<i class=\"glyphicon glyphicon-minus-sign\"></i>',\n    clearButtonTitle: 'Clear',\n    clearButtonBaseClass: 'clear-rating',\n    clearButtonActiveClass: 'clear-rating-active',\n    clearCaption: 'Not Rated',\n    clearCaptionClass: 'label label-default',\n    clearValue: null,\n    captionElement: null,\n    clearElement: null,\n    containerClass: null,\n    hoverEnabled: true,\n    hoverChangeCaption: true,\n    hoverChangeStars: true,\n    hoverOnClear: true\n  };\n  /**\r\n   * Convert automatically number inputs with class 'rating'\r\n   * into the star rating control.\r\n   */\n\n  $('input.rating').addClass('rating-loading');\n  $(document).ready(function () {\n    var $input = $('input.rating'),\n        count = Object.keys($input).length;\n\n    if (count > 0) {\n      $input.rating();\n    }\n  });\n})(jQuery);","map":{"version":3,"sources":["/home/anbinh/Desktop/open-ruby-2019-hiring-player/app/javascript/packs/star-rating.js"],"names":["$","DEFAULT_MIN","DEFAULT_MAX","DEFAULT_STEP","isTouchCapable","window","DocumentTouch","document","isEmpty","value","trim","undefined","validateAttr","$input","vattr","options","chk","data","attr","getDecimalPlaces","num","match","Math","max","length","applyPrecision","val","precision","parseFloat","toFixed","Rating","element","$element","init","prototype","constructor","_parseAttr","self","final","listen","initTouch","$rating","on","e","inactive","w","pageX","offset","left","setStars","trigger","$caption","html","starClicked","hoverEnabled","pos","out","calculate","toggleHover","caption","cache","$clear","hoverOnClear","clearClicked","clearCaptionClass","clearCaption","clearValue","width","getWidthFromValue","clear","form","reset","destroy","$el","$container","before","remove","removeData","get","off","removeClass","create","arguments","rating","setTouch","update","ev","originalEvent","touches","changedTouches","fetchCaption","rtl","$stars","css","initSlider","initialValue","min","step","isNaN","diff","hoverChangeCaption","hoverChangeStars","checkDisabled","containerClass","glyphicon","defaultStar","symbol","showClear","showCaption","size","stars","defaultCaption","starCaptions","starCaptionClasses","clearButton","clearButtonTitle","clearButtonBaseClass","clearButtonActiveClass","addClass","$clearElement","clearElement","$captionElement","captionElement","createElement","append","appendTo","find","generateRating","getClearClass","disabled","readonly","renderClear","renderCaption","getStars","prepend","numStars","i","cap","replace","getValueFromPosition","factor","maxWidth","floor","ceil","defaultVal","title","refresh","extend","show","hide","fn","option","args","Array","apply","shift","each","$this","defaults","ready","count","Object","keys","jQuery"],"mappings":"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","sourcesContent":["/*!\r\n * @copyright &copy; Kartik Visweswaran, Krajee.com, 2014\r\n * @version 3.3.0\r\n *\r\n * A simple yet powerful JQuery star rating plugin that allows rendering\r\n * fractional star ratings and supports Right to Left (RTL) input.\r\n * \r\n * For more JQuery plugins visit http://plugins.krajee.com\r\n * For more Yii related demos visit http://demos.krajee.com\r\n */\r\n(function ($) {\r\n    var DEFAULT_MIN = 0;\r\n    var DEFAULT_MAX = 5;\r\n    var DEFAULT_STEP = 0.5;\r\n\r\n    var isTouchCapable = 'ontouchstart' in window || (window.DocumentTouch && document instanceof window.DocumentTouch);\r\n    \r\n    var isEmpty = function (value, trim) {\r\n        return typeof value === 'undefined' || value === null || value === undefined || value == []\r\n            || value === '' || trim && $.trim(value) === '';\r\n    };\r\n\r\n    var validateAttr = function ($input, vattr, options) {\r\n        var chk = isEmpty($input.data(vattr)) ? $input.attr(vattr) : $input.data(vattr);\r\n        if (chk) {\r\n            return chk;\r\n        }\r\n        return options[vattr];\r\n    };\r\n\r\n    var getDecimalPlaces = function (num) {\r\n        var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n        if (!match) {\r\n            return 0;\r\n        }\r\n        return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n    };\r\n\r\n    var applyPrecision = function (val, precision) {\r\n        return parseFloat(val.toFixed(precision));\r\n    };\r\n    \r\n    // Rating public class definition\r\n    var Rating = function (element, options) {\r\n        this.$element = $(element);\r\n        this.init(options);\r\n    };\r\n\r\n    Rating.prototype = {\r\n        constructor: Rating,\r\n        _parseAttr: function (vattr, options) {\r\n            var self = this, $input = self.$element;\r\n            if ($input.attr('type') === 'range' || $input.attr('type') === 'number') {\r\n                var val = validateAttr($input, vattr, options);\r\n                var chk = DEFAULT_STEP;\r\n                if (vattr === 'min') {\r\n                    chk = DEFAULT_MIN;\r\n                }\r\n                else if (vattr === 'max') {\r\n                    chk = DEFAULT_MAX;\r\n                }\r\n                else if (vattr === 'step') {\r\n                    chk = DEFAULT_STEP;\r\n                }\r\n                var final = isEmpty(val) ? chk : val;\r\n                return parseFloat(final);\r\n            }\r\n            return parseFloat(options[vattr]);\r\n        },\r\n        /**\r\n         * Listens to events\r\n         */\r\n        listen: function () {\r\n            var self = this;\r\n            self.initTouch();\r\n            self.$rating.on(\"click\", function (e) {\r\n                if (self.inactive) {\r\n                    return;\r\n                }\r\n                var w = e.pageX - self.$rating.offset().left;\r\n                self.setStars(w);\r\n                self.$element.trigger('change');\r\n                self.$element.trigger('rating.change', [self.$element.val(), self.$caption.html()]);\r\n                self.starClicked = true;\r\n            });\r\n            self.$rating.on(\"mousemove\", function (e) {\r\n                if (!self.hoverEnabled || self.inactive) {\r\n                    return;\r\n                }\r\n                self.starClicked = false;\r\n                var pos = e.pageX - self.$rating.offset().left, out = self.calculate(pos);\r\n                self.toggleHover(out);\r\n                self.$element.trigger('rating.hover', [out.val, out.caption, 'stars']);\r\n            });\r\n            self.$rating.on(\"mouseleave\", function (e) {\r\n                if (!self.hoverEnabled || self.inactive || self.starClicked) {\r\n                    return;\r\n                }\r\n                var out = self.cache;\r\n                self.toggleHover(out);\r\n                self.$element.trigger('rating.hoverleave', ['stars']);\r\n            });\r\n            self.$clear.on(\"mousemove\", function (e) {\r\n                if (!self.hoverEnabled || self.inactive || !self.hoverOnClear) {\r\n                    return;\r\n                }\r\n                self.clearClicked = false;\r\n                var caption = '<span class=\"' + self.clearCaptionClass + '\">' + self.clearCaption + '</span>',\r\n                    val = self.clearValue, width = self.getWidthFromValue(val), out;\r\n                out = {caption: caption, width: width, val: val};\r\n                self.toggleHover(out);\r\n                self.$element.trigger('rating.hover', [val, caption, 'clear']);\r\n            });\r\n            self.$clear.on(\"mouseleave\", function (e) {\r\n                if (!self.hoverEnabled || self.inactive || self.clearClicked || !self.hoverOnClear) {\r\n                    return;\r\n                }\r\n                var out = self.cache;\r\n                self.toggleHover(out);\r\n                self.$element.trigger('rating.hoverleave', ['clear']);\r\n            });\r\n            self.$clear.on(\"click\", function (e) {\r\n                if (!self.inactive) {\r\n                    self.clear();\r\n                    self.clearClicked = true;\r\n                }\r\n            });\r\n            $(self.$element[0].form).on(\"reset\", function (e) {\r\n                if (!self.inactive) {\r\n                    self.reset();\r\n                }\r\n            });\r\n        },\r\n        destroy: function() {\r\n            var self = this, $el = self.$element;\r\n            if (!isEmpty(self.$container)) {\r\n                self.$container.before($el).remove();\r\n            }\r\n            $.removeData($el.get(0));\r\n            $el.off('rating').removeClass('hide');\r\n        },\r\n        create: function() {\r\n            var options = arguments.length > 0 ? arguments[0] : {}, \r\n                $el = self.$element;\r\n            self.destroy();\r\n            $el.rating(options);\r\n        },\r\n        setTouch: function(e, update) {\r\n            var self = this;\r\n            if (!isTouchCapable || self.inactive) {\r\n                return;\r\n            }\r\n            var ev = e.originalEvent,\r\n                touches = ev.touches.length > 0 ? ev.touches : ev.changedTouches,\r\n                pos = touches[0].pageX - self.$rating.offset().left;\r\n            if (update === true) {\r\n                self.setStars(pos);\r\n                self.$element.trigger('change');\r\n                self.$element.trigger('rating.change', [self.$element.val(), self.$caption.html()]);\r\n                self.starClicked = true;\r\n            } else {\r\n                var out = self.calculate(pos), caption = out.val <= self.clearValue ? self.fetchCaption(self.clearValue) : out.caption, \r\n                    w = self.getWidthFromValue(self.clearValue),\r\n                    width = out.val <= self.clearValue ? (self.rtl ? (100 - w) + '%' : w + '%') : out.width;\r\n                self.$caption.html(caption);\r\n                self.$stars.css('width', width);\r\n            }\r\n        },\r\n        initTouch: function() {\r\n            var self = this;\r\n            self.$rating.on(\"touchstart\", function (e) {\r\n                self.setTouch(e, false);\r\n            });\r\n            self.$rating.on(\"touchmove\", function (e) {\r\n                self.setTouch(e, false);\r\n            });\r\n            self.$rating.on(\"touchend\", function (e) {\r\n                self.setTouch(e, true);\r\n            });\r\n        },\r\n        initSlider: function (options) {\r\n            var self = this;\r\n            if (isEmpty(self.$element.val())) {\r\n                self.$element.val(0);\r\n            }\r\n            self.initialValue = self.$element.val();\r\n            self.min = (typeof options.min !== 'undefined') ? options.min : self._parseAttr('min', options);\r\n            self.max = (typeof options.max !== 'undefined') ? options.max : self._parseAttr('max', options);\r\n            self.step = (typeof options.step !== 'undefined') ? options.step : self._parseAttr('step', options);\r\n            if (isNaN(self.min) || isEmpty(self.min)) {\r\n                self.min = DEFAULT_MIN;\r\n            }\r\n            if (isNaN(self.max) || isEmpty(self.max)) {\r\n                self.max = DEFAULT_MAX;\r\n            }\r\n            if (isNaN(self.step) || isEmpty(self.step) || self.step == 0) {\r\n                self.step = DEFAULT_STEP;\r\n            }\r\n            self.diff = self.max - self.min;\r\n        },\r\n        /**\r\n         * Initializes the plugin\r\n         */\r\n        init: function (options) {\r\n            var self = this;\r\n            self.options = options;\r\n            self.hoverEnabled = options.hoverEnabled;\r\n            self.hoverChangeCaption = options.hoverChangeCaption;\r\n            self.hoverChangeStars = options.hoverChangeStars;\r\n            self.hoverOnClear = options.hoverOnClear;\r\n            self.starClicked = false;\r\n            self.clearClicked = false;\r\n            self.initSlider(options);\r\n            self.checkDisabled();\r\n            $element = self.$element;\r\n            self.containerClass = options.containerClass;\r\n            self.glyphicon = options.glyphicon;\r\n            var defaultStar = (self.glyphicon) ? '\\ue006' : '\\u2605';\r\n            self.symbol = isEmpty(options.symbol) ? defaultStar : options.symbol;\r\n            self.rtl = options.rtl || self.$element.attr('dir');\r\n            if (self.rtl) {\r\n                self.$element.attr('dir', 'rtl');\r\n            }\r\n            self.showClear = options.showClear;\r\n            self.showCaption = options.showCaption;\r\n            self.size = options.size;\r\n            self.stars = options.stars;\r\n            self.defaultCaption = options.defaultCaption;\r\n            self.starCaptions = options.starCaptions;\r\n            self.starCaptionClasses = options.starCaptionClasses;\r\n            self.clearButton = options.clearButton;\r\n            self.clearButtonTitle = options.clearButtonTitle;\r\n            self.clearButtonBaseClass = !isEmpty(options.clearButtonBaseClass) ? options.clearButtonBaseClass : 'clear-rating';\r\n            self.clearButtonActiveClass = !isEmpty(options.clearButtonActiveClass) ? options.clearButtonActiveClass : 'clear-rating-active';\r\n            self.clearCaption = options.clearCaption;\r\n            self.clearCaptionClass = options.clearCaptionClass;\r\n            self.clearValue = isEmpty(options.clearValue) ? self.min : options.clearValue;\r\n            self.$element.removeClass('form-control').addClass('form-control');\r\n            self.$clearElement = isEmpty(options.clearElement) ? null : $(options.clearElement);\r\n            self.$captionElement = isEmpty(options.captionElement) ? null : $(options.captionElement);\r\n            if (typeof self.$rating == 'undefined' && typeof self.$container == 'undefined') {\r\n                self.$rating = $(document.createElement(\"div\")).html('<div class=\"rating-stars\"></div>');\r\n                self.$container = $(document.createElement(\"div\"));\r\n                self.$container.before(self.$rating);\r\n                self.$container.append(self.$rating);\r\n                self.$element.before(self.$container).appendTo(self.$rating);\r\n            }\r\n            self.$stars = self.$rating.find('.rating-stars');\r\n            self.generateRating();\r\n            self.$clear = !isEmpty(self.$clearElement) ? self.$clearElement : self.$container.find('.' + self.clearButtonBaseClass);\r\n            self.$caption = !isEmpty(self.$captionElement) ? self.$captionElement : self.$container.find(\".caption\");\r\n            self.setStars();\r\n            self.$element.removeClass('hide').addClass('hide');\r\n            self.listen();\r\n            if (self.showClear) {\r\n                self.$clear.attr({\"class\": self.getClearClass()});\r\n            }\r\n            self.cache = {\r\n                caption: self.$caption.html(),\r\n                width: self.$stars.width(),\r\n                val: self.$element.val()\r\n            };\r\n            self.$element.removeClass('rating-loading');\r\n        },\r\n        checkDisabled: function () {\r\n            var self = this;\r\n            self.disabled = validateAttr(self.$element, 'disabled', self.options);\r\n            self.readonly = validateAttr(self.$element, 'readonly', self.options);\r\n            self.inactive = (self.disabled || self.readonly);\r\n        },\r\n        getClearClass: function () {\r\n            return this.clearButtonBaseClass + ' ' + ((this.inactive) ? '' : this.clearButtonActiveClass);\r\n        },\r\n        generateRating: function () {\r\n            var self = this, clear = self.renderClear(), caption = self.renderCaption(),\r\n                css = (self.rtl) ? 'rating-container-rtl' : 'rating-container',\r\n                stars = self.getStars();\r\n            css += (self.glyphicon) ? ((self.symbol == '\\ue006') ? ' rating-gly-star' : ' rating-gly') : ' rating-uni';\r\n            self.$rating.attr('class', css);\r\n            self.$rating.attr('data-content', stars);\r\n            self.$stars.attr('data-content', stars);\r\n            var css = self.rtl ? 'star-rating-rtl' : 'star-rating';\r\n            self.$container.attr('class', css + ' rating-' + self.size);\r\n\r\n            if (self.inactive) {\r\n                self.$container.removeClass('rating-active').addClass('rating-disabled');\r\n            }\r\n            else {\r\n                self.$container.removeClass('rating-disabled').addClass('rating-active');\r\n            }\r\n\r\n            if (typeof self.$caption == 'undefined' && typeof self.$clear == 'undefined') {\r\n                if (self.rtl) {\r\n                    self.$container.prepend(caption).append(clear);\r\n                }\r\n                else {\r\n                    self.$container.prepend(clear).append(caption);\r\n                }\r\n            }\r\n            if (!isEmpty(self.containerClass)) {\r\n                self.$container.removeClass(self.containerClass).addClass(self.containerClass);\r\n            }\r\n        },\r\n        getStars: function () {\r\n            var self = this, numStars = self.stars, stars = '';\r\n            for (var i = 1; i <= numStars; i++) {\r\n                stars += self.symbol;\r\n            }\r\n            return stars;\r\n        },\r\n        renderClear: function () {\r\n            var self = this;\r\n            if (!self.showClear) {\r\n                return '';\r\n            }\r\n            var css = self.getClearClass();\r\n            if (!isEmpty(self.$clearElement)) {\r\n                self.$clearElement.removeClass(css).addClass(css).attr({\"title\": self.clearButtonTitle});\r\n                self.$clearElement.html(self.clearButton);\r\n                return '';\r\n            }\r\n            return '<div class=\"' + css + '\" title=\"' + self.clearButtonTitle + '\">' + self.clearButton + '</div>';\r\n        },\r\n        renderCaption: function () {\r\n            var self = this, val = self.$element.val();\r\n            if (!self.showCaption) {\r\n                return '';\r\n            }\r\n            var html = self.fetchCaption(val);\r\n            if (!isEmpty(self.$captionElement)) {\r\n                self.$captionElement.removeClass('caption').addClass('caption').attr({\"title\": self.clearCaption});\r\n                self.$captionElement.html(html);\r\n                return '';\r\n            }\r\n            return '<div class=\"caption\">' + html + '</div>';\r\n        },\r\n        fetchCaption: function (rating) {\r\n            var self = this;\r\n            var val = parseFloat(rating), css, cap;\r\n            if (typeof(self.starCaptionClasses) == \"function\") {\r\n                css = isEmpty(self.starCaptionClasses(val)) ? self.clearCaptionClass : self.starCaptionClasses(val);\r\n            } else {\r\n                css = isEmpty(self.starCaptionClasses[val]) ? self.clearCaptionClass : self.starCaptionClasses[val];\r\n            }\r\n            if (typeof(self.starCaptions) == \"function\") {\r\n                var cap = isEmpty(self.starCaptions(val)) ? self.defaultCaption.replace(/\\{rating\\}/g, val) : self.starCaptions(val);\r\n            } else {\r\n                var cap = isEmpty(self.starCaptions[val]) ? self.defaultCaption.replace(/\\{rating\\}/g, val) : self.starCaptions[val];\r\n            }\r\n            var caption = (val == self.clearValue) ? self.clearCaption : cap;\r\n            return '<span class=\"' + css + '\">' + caption + '</span>';\r\n        },\r\n        getWidthFromValue: function (val) {\r\n            var self = this, min = self.min, max = self.max, step = self.step;\r\n            if (val <= min || min == max) {\r\n                return 0;\r\n            }\r\n            if (val >= max) {\r\n                return 100;\r\n            }\r\n            return (val - min)  * 100 / (max - min);\r\n        },\r\n        getValueFromPosition: function (pos) {\r\n            var self = this, precision = getDecimalPlaces(self.step),\r\n                val, factor, maxWidth = self.$rating.width();\r\n            factor = (self.diff * pos) / (maxWidth * self.step);\r\n            factor = self.rtl ? Math.floor(factor) : Math.ceil(factor);\r\n            val = applyPrecision(parseFloat(self.min + factor * self.step), precision);\r\n            val = Math.max(Math.min(val, self.max), self.min);\r\n            return self.rtl ? (self.max - val) : val;\r\n        },\r\n        toggleHover: function(out) {\r\n            var self = this;\r\n            if (self.hoverChangeCaption) {\r\n                var caption = out.val <= self.clearValue ? self.fetchCaption(self.clearValue) : out.caption;\r\n                self.$caption.html(caption);\r\n            }\r\n            if (self.hoverChangeStars) {\r\n                var w = self.getWidthFromValue(self.clearValue),\r\n                    width = out.val <= self.clearValue ? (self.rtl ? (100 - w) + '%' : w + '%') : out.width;\r\n                self.$stars.css('width', width);\r\n            }\r\n        },\r\n        calculate: function (pos) {\r\n            var self = this, defaultVal = isEmpty(self.$element.val()) ? 0 : self.$element.val(),\r\n                val = arguments.length ? self.getValueFromPosition(pos) : defaultVal,\r\n                caption = self.fetchCaption(val), width = self.getWidthFromValue(val);\r\n            if (self.rtl) {\r\n                width = 100 - width;\r\n            }\r\n            width += '%';\r\n            return {caption: caption, width: width, val: val};\r\n        },\r\n        setStars: function (pos) {\r\n            var self = this, out = arguments.length ? self.calculate(pos) : self.calculate();\r\n            self.$element.val(out.val);\r\n            self.$stars.css('width', out.width);\r\n            self.$caption.html(out.caption);\r\n            self.cache = out\r\n        },\r\n        clear: function () {\r\n            var self = this;\r\n            var title = '<span class=\"' + self.clearCaptionClass + '\">' + self.clearCaption + '</span>';\r\n            self.$stars.removeClass('rated');\r\n            if (!self.inactive) {\r\n                self.$caption.html(title);\r\n            }\r\n            self.$element.val(self.clearValue);\r\n            self.setStars();\r\n            self.$element.trigger('rating.clear');\r\n        },\r\n        reset: function () {\r\n            var self = this;\r\n            self.$element.val(self.initialValue);\r\n            self.setStars();\r\n            self.$element.trigger('rating.reset');\r\n        },\r\n        update: function (val) {\r\n            var self = this;\r\n            if (!arguments.length) {\r\n                return;\r\n            }\r\n            self.$element.val(val);\r\n            self.setStars();\r\n        },\r\n        refresh: function (options) {\r\n            var self = this;\r\n            if (!arguments.length) {\r\n                return;\r\n            }\r\n            self.$rating.off('rating');\r\n            self.$clear.off();\r\n            self.init($.extend(self.options, options));\r\n            self.showClear ? self.$clear.show() : self.$clear.hide();\r\n            self.showCaption ? self.$caption.show() : self.$caption.hide();\r\n            self.$element.trigger('rating.refresh');\r\n        }\r\n    };\r\n\r\n    //Star rating plugin definition\r\n    $.fn.rating = function (option) {\r\n        var args = Array.apply(null, arguments);\r\n        args.shift();\r\n        return this.each(function () {\r\n            var $this = $(this),\r\n                data = $this.data('rating'),\r\n                options = typeof option === 'object' && option;\r\n\r\n            if (!data) {\r\n                $this.data('rating', (data = new Rating(this, $.extend({}, $.fn.rating.defaults, options, $(this).data()))));\r\n            }\r\n\r\n            if (typeof option === 'string') {\r\n                data[option].apply(data, args);\r\n            }\r\n        });\r\n    };\r\n\r\n    $.fn.rating.defaults = {\r\n        stars: 5,\r\n        glyphicon: true,\r\n        symbol: null,\r\n        disabled: false,\r\n        readonly: false,\r\n        rtl: false,\r\n        size: 'md',\r\n        showClear: true,\r\n        showCaption: true,\r\n        defaultCaption: '{rating} Stars',\r\n        starCaptions: {\r\n            0.5: 'Half Star',\r\n            1: 'One Star',\r\n            1.5: 'One & Half Star',\r\n            2: 'Two Stars',\r\n            2.5: 'Two & Half Stars',\r\n            3: 'Three Stars',\r\n            3.5: 'Three & Half Stars',\r\n            4: 'Four Stars',\r\n            4.5: 'Four & Half Stars',\r\n            5: 'Five Stars'\r\n        },\r\n        starCaptionClasses: {\r\n            0.5: 'label label-danger',\r\n            1: 'label label-danger',\r\n            1.5: 'label label-warning',\r\n            2: 'label label-warning',\r\n            2.5: 'label label-info',\r\n            3: 'label label-info',\r\n            3.5: 'label label-primary',\r\n            4: 'label label-primary',\r\n            4.5: 'label label-success',\r\n            5: 'label label-success'\r\n        },\r\n        clearButton: '<i class=\"glyphicon glyphicon-minus-sign\"></i>',\r\n        clearButtonTitle: 'Clear',\r\n        clearButtonBaseClass: 'clear-rating',\r\n        clearButtonActiveClass: 'clear-rating-active',\r\n        clearCaption: 'Not Rated',\r\n        clearCaptionClass: 'label label-default',\r\n        clearValue: null,\r\n        captionElement: null,\r\n        clearElement: null,\r\n        containerClass: null,\r\n        hoverEnabled: true,\r\n        hoverChangeCaption: true,\r\n        hoverChangeStars: true,\r\n        hoverOnClear: true\r\n    };\r\n\r\n\r\n    /**\r\n     * Convert automatically number inputs with class 'rating'\r\n     * into the star rating control.\r\n     */\r\n    $('input.rating').addClass('rating-loading');\r\n\r\n    $(document).ready(function () {\r\n        var $input = $('input.rating'), count = Object.keys($input).length;\r\n        if (count > 0) {\r\n            $input.rating();\r\n        }\r\n    });\r\n}(jQuery)); "]},"metadata":{},"sourceType":"module"}